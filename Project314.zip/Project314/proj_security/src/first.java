
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author HP
 */
public class first extends javax.swing.JFrame {

    /**
     * Creates new form first
     */
    public first() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("EN-DE PROGRAM");
        setBackground(new java.awt.Color(255, 204, 204));

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));

        jRadioButton1.setText("Encrypt ");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setText("Decrypt ");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Enter Text:");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Choose (Encrypte OR Decrypt) :");

        jLabel3.setText("Output:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jRadioButton1)
                                    .addGap(107, 107, 107)
                                    .addComponent(jRadioButton2))
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 33, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2))
                .addGap(23, 23, 23)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
      jTextField2.setText("");
      jRadioButton2.setSelected(false);
        boolean t=test(jTextField1.getText());
          if(!t){
              JOptionPane.showMessageDialog(null,"Invalid input .. Please Enter 8 characters only and without SPACES!");
          jTextField1.setText("");
          jRadioButton1.setSelected(false);
          
          }
          else
        jTextField2.setText(encryption(jTextField1.getText()));
          
          
          
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
          
          
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
jTextField2.setText("");
jRadioButton1.setSelected(false);
        boolean t=test(jTextField1.getText());
          if(!t){
              JOptionPane.showMessageDialog(null,"Invalid input .. Please Enter 8 characters only and without SPACES!");
          jTextField1.setText("");
          jRadioButton2.setSelected(false);
          
          }
          else
        jTextField2.setText(Decryption(jTextField1.getText()));
          
          
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(first.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(first.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(first.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(first.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new first().setVisible(true);
            }
        });
    }
public static boolean test(String str){
    int size=str.length();
    if (size==0)
       return false;

    //Case 1: ONLY 8 LETTERS ACCEPTED.
    //Case 2: SPACES ARE NOT ACCEPTED. 
    for(int i=0;i<size;i++){
    if(str.charAt(i)==' ' || size!=8)
    return false;
    }
    return true;
    }

static String encryption(String plaintext){
    	String ciphertext = "";

		for(int i=0;i<2;i++){


	   // -------------------- swap -----------------


         char[] ch1 = plaintext.toCharArray();
         int mid = ( ch1.length + 1 ) / 2; 
	
	      for( int left = 0, right = mid; right < ch1.length; left++, right++ ) {
        	char tmp = ch1[left];
        	ch1[left] = ch1[right];
        	ch1[right] = tmp;
          } 
         
          String swappedString = new String(ch1);


        	// ------------------ P BOX ENCRYPTION---------------------------
			char [] result1 = new char [swappedString.length()]; // to store the cipher text
			char [] copy = swappedString.toCharArray(); // convert it to array for easier manipulation
			result1[0] = copy [3];
			result1[1] = copy [1];
			result1[2] = copy [7];
			result1[3] = copy [5];
			result1[4] = copy [0];
			result1[5] = copy [4];
			result1[6] = copy [6];
			result1[7] = copy [2];
		    String finaltext = new String(result1);
          
	

			  int k = 3; 
			  ciphertext =  finaltext.substring(k) + finaltext.substring(0,k);
	        

		plaintext=ciphertext;
	     }
	     	        return ciphertext;	

	 }
 static String Decryption(String ciphertext){
	 
	 String plaintext ="";

    	for(int j=0;j<2;j++){



		
			  int n = 5;
			 String rText= ciphertext.substring(n) + ciphertext.substring(0,n) ;
	        
		//------------------ P BOX DECRYPTION ------------------------
			char [] result1 = new char [rText.length()];
			char [] copy = rText.toCharArray();
			result1[0] = copy [4];
			result1[1] = copy [1];
			result1[2] = copy [7];
			result1[3] = copy [0];
			result1[4] = copy [5];
			result1[5] = copy [3];
			result1[6] = copy [6];
			result1[7] = copy [2];
			String resulttext = new String(result1);



       //-------------------swap--------------------------

         char[] ch1 = resulttext.toCharArray();
         int mid = ( ch1.length + 1 ) / 2; // or fixed length = 4 ?
	
	      for( int left = 0, right = mid; right < ch1.length; left++, right++ ) {
        	char tmp = ch1[left];
        	ch1[left] = ch1[right];
        	ch1[right] = tmp;
          } 
         
           plaintext = new String(ch1);


	      ciphertext= plaintext;//update
		}
       return plaintext;

	
}



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
